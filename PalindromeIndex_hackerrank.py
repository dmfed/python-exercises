'''
Задана строка, состоящая из маленьких букв латинского алфавита. Требуется определить, существует ли такая буква в строке, что если её удалить, то полученная строка (с длиной на единицу меньше) станет палиндромом. При этом если изначальная строка уже является палиндромом, нужно вывести -1. Формат входных данных

В первой строке записано целое число T – количество тестов. В каждой из следующих T строк записана последовательность маленьких букв латинского алфавита.

Формат выходных данных

Для каждого теста выведите ответ, индекс буквы, которую нужно удалить. Считайте, что символы строки индексируются от 0. Если строка изначально является палиндромом выведите -1.

Ограничения

1 ≤ T ≤ 20
1 ≤ длина строки ≤ 200005
Пример входных данных

3
aaab
baa
aaa
Пример выходных данных

3
0
-1
'''

def palindromeIndex(s):
    if is_palindrome(s):
        return -1
    for i in range(int(len(s)/2)):
        if s[i] != s[-(i+1)] and is_palindrome(s[:i] + s[i+1:]):
            return i
        elif s[i] != s[-(i+1)]:
            return len(s) - (i+1)

def is_palindrome(s):
    return s == s[::-1]


assert palindromeIndex("aaab") == 3
assert palindromeIndex("baa") == 0
assert palindromeIndex("aaa") == -1